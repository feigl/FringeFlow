# using this guide & mambaforge:
# https://github.com/yunjunz/conda_envs

FROM --platform=linux/amd64 docker.io/condaforge/mambaforge:latest as maise

# create new environment & initialize it (adds conda environment stuff to .bashrc)
RUN mamba create --name maise --yes \
 && mamba init --system bash

# https://pythonspeed.com/articles/activate-conda-dockerfile/
# because "each RUN in a Dockerfile is a separate run of bash"

# switch shell sh (default in Linux) to bash
# https://github.com/containers/podman/issues/8477
# https://stackoverflow.com/questions/55123637/activate-conda-environment-in-docker
# also make it a login shell so it adds .bashrc before each RUN command
SHELL ["/bin/bash", "--login", "-o", "pipefail", "-c"]
RUN echo "mamba activate maise" >> $HOME/.bashrc

# install stuff that's available directory from conda-forge (isce2, mintpy)
#RUN mamba install --name maise --channel conda-forge isce2 mintpy --yes
RUN mamba install --name maise --channel conda-forge isce2 mintpy imageMagick --yes

# work around following error
#  File "/opt/conda/envs/maise/share/isce2/topsStack/Stack.py", line 1646, in getkmlQUAD
#     import cv2
# ModuleNotFoundError: No module named 'cv2'
RUN grep cv2 /opt/conda/envs/maise/share/isce2/topsStack/Stack.py
RUN sed -i 's/import cv2/#import cv2/' /opt/conda/envs/maise/share/isce2/topsStack/Stack.py
RUN grep cv2 /opt/conda/envs/maise/share/isce2/topsStack/Stack.py

## To work around following error, get latest version of pip
# DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
#   __import__('pkg_resources').require('ARIAtools==1.1.6')

# get new version of pip
RUN mamba install pip --yes

# check that ISCE_HOME was set in the current environment by the above
RUN test -n "${ISCE_HOME-}"

# install ARIA-tools
RUN mkdir -p /tools \
 && cd /tools \
 && git clone https://github.com/aria-tools/ARIA-tools.git \
 && mamba install --name maise --channel conda-forge --file /tools/ARIA-tools/requirements.txt --yes \
 && cd /tools/ARIA-tools \
 && pip install -e  .


# install SSARA 
#RUN git clone https://www.unavco.org/gitlab/unavco_public/ssara_client.git /tools/SSARA \
#RUN git clone https://github.com/rgrapenthin/SSARA.git /tools/SSARA \
# neither of the above web sites is available
# but I have a copy here
# RUN cp /Users/feigl/FringeFlow/ssara /tools/SSARA
#RUN wget -nd -r https://github.com/feigl/FringeFlow/tree/main/ssara /tools/SSARA
RUN rm -rf /tools/FringeFlow
RUN git clone https://github.com/feigl/FringeFlow.git /tools/FringeFlow
RUN mkdir /tools/SSARA 
RUN mv /tools/FringeFlow/ssara/* /tools/SSARA

# TODO work around error with small num_loop
# RUN find / -name unwrap_error_phase_closure.py
# RUN ls -l /tools
# RUN ls -l /opt/conda/envs/maise/lib/python3.11/site-packages/mintpy/unwrap_error_phase_closure.py
# RUN ls -l /tools/FringeFlow/mintpy/unwrap_error_phase_closure.py 
#RUN sdiff -s /opt/conda/envs/maise/lib/python3.11/site-packages/mintpy/unwrap_error_phase_closure.py /tools/FringeFlow/mintpy/unwrap_error_phase_closure.py 
RUN mv -vf /opt/conda/envs/maise/lib/python3.11/site-packages/mintpy/unwrap_error_phase_closure.py /opt/conda/envs/maise/lib/python3.11/site-packages/mintpy/unwrap_error_phase_closure.py.save
RUN cp -vf /tools/FringeFlow/mintpy/unwrap_error_phase_closure.py /opt/conda/envs/maise/lib/python3.11/site-packages/mintpy/unwrap_error_phase_closure.py

#RUN rm -rf /tools/FringeFlow


RUN chmod +x /tools/SSARA/ssara_federated_query.py
ENV SSARA_HOME=/tools/SSARA

# install PyAPS
RUN pip install git+https://github.com/insarlab/PyAPS.git



# make everything under /tools/ writable
RUN chmod -R a+w /tools

# still getting this error
# '/var/lib/condor/execute/slot1/dir_752360/magic/model.cfg' -> '/opt/conda/envs/maise/lib/python3.11/site-packages/pyaps3/model.cfg'
# cp: cannot remove '/opt/conda/envs/maise/lib/python3.11/site-packages/pyaps3/model.cfg': Permission denied
RUN chmod -R a+w /opt/conda/envs/maise


# run some tests

# debug: check environment
#RUN env

RUN echo "export PATH=${ISCE_HOME}/bin:${ISCE_HOME}/applications:${PATH}" >> $HOME/.bashrc

RUN topsApp.py --help --steps
RUN ariaDownload.py --help
RUN smallbaselineApp.py --help
RUN /tools/SSARA/ssara_federated_query.py --help

# additional stack setup
# https://github.com/isce-framework/isce2/blob/main/contrib/stack/README.md
#ISCE_STACK={full_path_to_your_contrib/stack}
RUN echo "export PYTHONPATH=${PYTHONPATH}:${ISCE_STACK}" >> $HOME/.bashrc
RUN echo "export PATH=${PATH}:${ISCE_STACK}/topsStack" >> $HOME/.bashrc
RUN stackSentinel.py --help


