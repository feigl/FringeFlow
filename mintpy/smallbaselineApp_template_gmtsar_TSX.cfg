
########## 1. load_data
##---------add attributes manually
## MintPy requires attributes listed at: https://mintpy.readthedocs.io/en/latest/api/attributes/
## Missing attributes can be added below manually (uncomment #), e.g.
PROJECT = SANEM_TSX_T167
PLATFORM = TSX
ORBIT_DIRECTION = ascending
## a. autoPath - automatic path pattern defined in mintpy.defaults.auto_path.AUTO_PATH_*
## b. load_data.py -H to check more details and example inputs.
## c. compression to save disk usage for ifgramStack.h5 file:
## no   - save   0% disk usage, fast [default]
## lzf  - save ~57% disk usage, relative slow
## gzip - save ~62% disk usage, very slow [not recommend]
mintpy.load.processor       = gmtsar  #[isce, aria, hyp3, gmtsar, snap, gamma, roipac], auto for isce
mintpy.load.autoPath        = no  #[yes / no], auto for no, use pre-defined auto path
mintpy.load.updateMode      = no  #[yes / no], auto for yes, skip re-loading if HDF5 files are complete
mintpy.load.compression     = auto  #[gzip / lzf / no], auto for no.
##---------interferogram stack:
mintpy.load.unwFile          = ../intf/In20230407_2023????/unwrap_ll.grd
mintpy.load.corFile          = ../intf/In20230407_2023????/corr_ll_cut_edit.grd
mintpy.load.connCompFile     = None
mintpy.load.intFile          = None
##---------geometry datasets:
mintpy.load.demFile          = ../intf/In20230407_2023????/dem_ll_cut_edit.grd
mintpy.load.incAngleFile     = ../intf/In20230407_2023????/incidence_ll_cut_edit.grd
mintpy.load.azAngleFile      = ../intf/In20230407_2023????/azimuth_ll_cut_edit.grd
mintpy.load.shadowMaskFile   = None
mintpy.load.waterMaskFile    = None
mintpy.load.bperpFile        = None
# guess at attributes
# [feigl@askja TSX]$ grep -i heading `find T167/raw -name "*.xml"` | awk '{print $2}' | awk -F'>' '{print $2}' | awk -F'<' '{print $1}' | awk '{sum+=$1} END {print "AVG=",sum/NR}'
# AVG= 350.525
# HEADING         = 348.872       #[float], satellite heading angle, measured from the north in clockwise as positive
mintpy.troposphericDelay.method = height_correlation  #[pyaps / height_correlation / gacos / no], auto for pyaps
mintpy.network.coherenceBased  = auto  #[yes / no], auto for no, exclude interferograms with coherence < minCoherence
mintpy.network.minCoherence    = auto  #[0.0-1.0], auto for 0.7
                                ## auto - randomly select a pixel with coherence > minCoherence
mintpy.reference.minCoherence  = 0.4   #[0.0-1.0], auto for 0.85, minimum coherence for auto method


